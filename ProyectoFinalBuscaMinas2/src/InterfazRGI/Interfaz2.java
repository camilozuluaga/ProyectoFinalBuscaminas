/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazRGI;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author jucazuse
 */
/**
 *
 * @author jucazuse
 */
public class Interfaz2 extends javax.swing.JFrame implements ActionListener {

    int numFilas;
    int numColumnas;
    int contadorMinas = 0;//numero de minas 
    int numeroCuadros = 0;//numero de cuadros
    int contador=0;//contador general para saber cuanto lleva pulsado 
    Boton matrizBotones[][];
  
    /**
     * Creates new form Interfaz
     */
    public Interfaz2() {
        initComponents();
        setLocationRelativeTo(this);
    }

    public boolean issuspended = false;//para saber si el hilo esta suspendido o pausado
    int hora = 0, min = 0, seg = 0, ds = 0;//unidades de medida
    Thread hilo = new Thread() {//declaramos el hilo

        @Override
        public void run() {
            try {
                while (true) {//ciclo infinito
                    if (ds == 99) {//si los decisegundos son iguales a 99
                        ds = 0;//decisegundo vuelve a empezar en cero
                        seg++;//y aumenta un segundo
                    }
                    if (seg == 59) {//si los segundos son iguales a 59
                        seg = 0;//segundo vuelve a empezar en cero
                        min++;//y aumenta un minuto
                    }
                    if (min == 59) {//si los minutos son iguales a 59
                        min = 0;//minuto vuelve a empezar en cero
                        hora++;//y aumenta una hora
                    }
                    ds++;//aumentan las decimas de segundo

                    lblTiempo.setText(hora + ":" + min + ":" + seg + ":" + ds);//se muestra en el jlabel

                    hilo.sleep(10);//que duerma una decima de segundo
                }
            } catch (java.lang.InterruptedException ie) {
                System.out.println(ie.getMessage());
            }
        }
    };


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFilas = new javax.swing.JTextField();
        txtColumnas = new javax.swing.JTextField();
        btnEmpezar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtBombas = new javax.swing.JTextField();
        lblTiempo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblContador = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panelMinas = new javax.swing.JLayeredPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        barSi = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Controles"));

        jLabel1.setText("Filas");
        jLabel1.setBounds(20, 20, 50, 30);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setText("Columnas");
        jLabel2.setBounds(160, 30, 70, 20);
        jLayeredPane1.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtFilas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFilasKeyReleased(evt);
            }
        });
        txtFilas.setBounds(50, 20, 100, 30);
        jLayeredPane1.add(txtFilas, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtColumnas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtColumnasKeyReleased(evt);
            }
        });
        txtColumnas.setBounds(220, 20, 90, 30);
        jLayeredPane1.add(txtColumnas, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnEmpezar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpezarActionPerformed(evt);
            }
        });
        btnEmpezar.setBounds(290, 60, 50, 40);
        jLayeredPane1.add(btnEmpezar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setText("Bombas");
        jLabel3.setBounds(320, 30, 50, 14);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtBombas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBombasActionPerformed(evt);
            }
        });
        txtBombas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBombasKeyReleased(evt);
            }
        });
        txtBombas.setBounds(380, 20, 40, 30);
        jLayeredPane1.add(txtBombas, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblTiempo.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        lblTiempo.setForeground(new java.awt.Color(255, 0, 0));
        lblTiempo.setText("00:00:00");
        lblTiempo.setBounds(560, 30, 100, 20);
        jLayeredPane1.add(lblTiempo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel5.setText("Tiempo");
        jLabel5.setBounds(460, 30, 80, 23);
        jLayeredPane1.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lblContador.setBounds(560, 60, 80, 30);
        jLayeredPane1.add(lblContador, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel4.setText("Puntaje");
        jLabel4.setBounds(460, 64, 70, 20);
        jLayeredPane1.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.setBounds(70, 60, 90, 40);
        jLayeredPane1.add(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        panelMinas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setText("Menu ");

        jMenuItem1.setText("Ayuda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Salir ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Puntaje");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Principal");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jRadioButtonMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Acerca de ");

        jMenuItem2.setText("Creditos");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Sonido");

        barSi.setSelected(true);
        barSi.setText("SI/NO");
        barSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barSiActionPerformed(evt);
            }
        });
        jMenu3.add(barSi);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMinas)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(panelMinas, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEmpezarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpezarActionPerformed
        iniciar();
        btnEmpezar.setIcon(new ImageIcon(getClass().getResource("/imagenes/feliz.png")));
        this.paintAll(this.getGraphics());
        /*este metodo lo que hace es pintar toda la interfaz grafica
         y se va a necesitar para que cuando se dibujen los botones se */
        if (!issuspended) {
            hilo.start();
        } else {
            hilo.resume();
            issuspended = false;
        }
    }//GEN-LAST:event_btnEmpezarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Desktop escritorio = Desktop.getDesktop();
        try {
            File archivo = new File("C:/Users/jucazuse/Documents/"
                    + "NetBeansProjects/ProyectoFinalBuscaMinas2/src/Imagenes/mi_archivo.chm");
            escritorio.open(archivo);
        } catch (Exception ex) {
            ex.printStackTrace();
            System.err.println("error tipo: " + ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Fabian Andres Garcia Mendez , Juan Camilo Zuluaga, Brayhan Andres Jaramillo");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.exit(WIDTH);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void txtBombasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBombasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBombasActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed

    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void barSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barSiActionPerformed
        silencio();
    }//GEN-LAST:event_barSiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtFilasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilasKeyReleased
        String cc;//variable de la cedula
        int tam;//tamaña del string

        if (!txtFilas.getText().matches("[0-9]*")) {
            JOptionPane.showMessageDialog(this, "DATO INGRESADO NO VALIDO", "VALIDACION", JOptionPane.ERROR_MESSAGE);
            txtFilas.setText("");
        }
        cc = txtFilas.getText();
        tam = cc.length();
        if (tam > 1) {
            JOptionPane.showMessageDialog(this, "EL NUMERO DE FILAS NO ES VALIDO", "VALIDACION", JOptionPane.ERROR_MESSAGE);
            txtFilas.setText("");
        }

    }//GEN-LAST:event_txtFilasKeyReleased

    private void txtColumnasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColumnasKeyReleased
        String cc;//variable de la cedula
        int tam;//tamaña del string

        if (!txtFilas.getText().matches("[0-9]*")) {
            JOptionPane.showMessageDialog(this, "DATO INGRESADO NO VALIDO", "VALIDACION", JOptionPane.ERROR_MESSAGE);
            txtFilas.setText("");
        }
        cc = txtFilas.getText();
        tam = cc.length();
        if (tam > 1) {
            JOptionPane.showMessageDialog(this, "EL NUMERO DE COLUMNAS NO ES VALIDO", "VALIDACION", JOptionPane.ERROR_MESSAGE);
            txtFilas.setText("");
        }
    }//GEN-LAST:event_txtColumnasKeyReleased

    private void txtBombasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBombasKeyReleased
        String cc;//variable de la cedula
        int tam;//tamaña del string

        if (!txtFilas.getText().matches("[0-9]*")) {
            JOptionPane.showMessageDialog(this, "DATO INGRESADO NO VALIDO", "VALIDACION", JOptionPane.ERROR_MESSAGE);
            txtFilas.setText("");
        }
        cc = txtFilas.getText();
        tam = cc.length();
        if (tam > 1) {
            JOptionPane.showMessageDialog(this, "EL NUMERO DE BOMBAS NO ES VALIDO", "VALIDACION", JOptionPane.ERROR_MESSAGE);
            txtFilas.setText("");
        }
    }//GEN-LAST:event_txtBombasKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Interfaz2().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButtonMenuItem barSi;
    private javax.swing.JButton btnEmpezar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JLabel lblContador;
    private javax.swing.JLabel lblTiempo;
    private javax.swing.JLayeredPane panelMinas;
    private javax.swing.JTextField txtBombas;
    private javax.swing.JTextField txtColumnas;
    private javax.swing.JTextField txtFilas;
    // End of variables declaration//GEN-END:variables

    private void iniciar() {
       
        panelMinas.removeAll();
       
        numFilas = Integer.parseInt(txtFilas.getText());
        numColumnas = Integer.parseInt(txtColumnas.getText());
        contadorMinas = Integer.parseInt(txtBombas.getText());


        matrizBotones = new Boton[numFilas][numColumnas];
        panelMinas.setLayout(new java.awt.GridLayout(numFilas, numColumnas));

        numeroCuadros = numFilas * numColumnas;

        for (int i = 0; i < numFilas; i++) {
            for (int j = 0; j < numColumnas; j++) {

                matrizBotones[i][j] = new Boton();
                matrizBotones[i][j].addActionListener(this);
                matrizBotones[i][j].setVisible(true);
                panelMinas.add(matrizBotones[i][j]);
            }
        }
       
        colocarMinas(contadorMinas);
    }

    public void colocarMinas(int cantMinas) {

        for (int i = 0; i < cantMinas; i++) {
            //	Coordenadas
            int x, y = 0;
            double x1, y1 = 0;
            /*
             * Leyenda de matrizMinas 1 Existe Mina 0 No existe Mina
             */
            //Colocar mina aleatoria
            do {
                //	Generar posiciones aleatorias
                x1 = Math.random() * numFilas;
                y1 = Math.random() * numColumnas;
                x =  (int) x1;
                y = (int) y1;
            } while (matrizBotones[x][y].estaMinado()!=false);
            matrizBotones[x][y].setMina(true); //	Poner mina
        }
    }

    @Override
    public void actionPerformed(ActionEvent evento) {
        Boton boton1 = (Boton) evento.getSource();
        /**
         * evento.getSource(); es el evento que se ejecuta cuando se hace click
         * el se convierte en el manejador de eventos y cuando se hace getSource
         * el me dice a que objeto se le dio click.
         */
        if (boton1.estaMinado()) {
            hilo.suspend();
            ds=seg=min=hora=0;
            issuspended=true;
            btnEmpezar.setIcon(new ImageIcon(getClass().getResource("/imagenes/cara.png")));
            boton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bomb.png")));
            if (barSi.isSelected()) {
                sonar();
            }

            JOptionPane.showMessageDialog(this, "Has perdido");
            contador = 0;
            panelMinas.removeAll();
           

        } else {
            boton1.setBackground(Color.BLUE);
            contador++;
            /*esta condicion es para determinar si el jugador gano*/
            if (numeroCuadros - contadorMinas == contador) {
                hilo.suspend();
                ds = seg = min = hora = 0;
                issuspended = true;
                panelMinas.removeAll();
                JOptionPane.showMessageDialog(this, "Ganaste");
                iniciar();
            }

        }
        lblContador.setText(String.valueOf(contador));

    }

    public void sonar() {

        Clip sonido = null;
        try {
            sonido = AudioSystem.getClip();
        } catch (LineUnavailableException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            try {
                try {
                    sonido.open(AudioSystem.getAudioInputStream(this.getClass().getResource("/Imagenes/sonido.wav")));
                    sonido.start();
                } catch (IOException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (UnsupportedAudioFileException ex) {
                System.out.println("error en la ruta");
            }
        } catch (LineUnavailableException ex) {
        }
    }
    
    public void silencio() {
        Clip sonido = null;
        try {
            sonido = AudioSystem.getClip();
        } catch (LineUnavailableException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            try {
                try {
                    sonido.open(AudioSystem.getAudioInputStream(this.getClass().getResource("/Imagenes/sonido.wav")));
                    sonido.stop();
                } catch (IOException ex) {
                    Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (UnsupportedAudioFileException ex) {
                System.out.println("error en la ruta");
            }
        } catch (LineUnavailableException ex) {
        }
    }
    
}